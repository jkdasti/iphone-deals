{"version":3,"sources":["forms/AddUserForm.js","forms/EditUserForm.js","tables/UserTable.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","id","name","startdate","enddate","investment","profit","user","setUser","useState","handleInputChange","event","value","target","onSubmit","preventDefault","addUser","type","onChange","EditUserForm","currentUser","useEffect","updateUser","onClick","setEditing","className","UserTable","users","length","map","key","editRow","deleteUser","colSpan","App","setUsers","setCurrentUser","editing","updatedUser","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d0bf8a.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddUserForm = props => {\n\tconst initialFormState = { id: null, name: ''\n\t, startdate: '',  enddate: '',  investment: 0,  profit: 0}\n\tconst [ user, setUser ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetUser({ ...user, [name]: value })\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={event => {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif (!user.name /*|| !user.username*/) return\n\n\t\t\t\tprops.addUser(user)\n\t\t\t\tsetUser(initialFormState)\n\t\t\t}}\n\t\t>\n\t\t\t<label>Name</label>\n\t\t\t<input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n\t\t\t<label>Start Date</label>\n\t\t\t<input type=\"date\" name=\"startdate\" value={user.startdate} onChange={handleInputChange} />\n\t\t\t<label>End Date</label>\n\t\t\t<input type=\"date\" name=\"enddate\" value={user.enddate} onChange={handleInputChange} />\n\t\t\t<label>Investment</label>\n\t\t\t<input type=\"number\" name=\"investment\" value={user.investment} onChange={handleInputChange} />\n\t\t\t<label>Profit</label>\n\t\t\t<input type=\"number\" name=\"profit\" value={user.profit} onChange={handleInputChange} />\n\t\t\t<button>Add new user</button>\n\t\t</form>\n\t)\n}\n\nexport default AddUserForm\n","import React, { useState, useEffect } from 'react'\n\nconst EditUserForm = props => {\n  const [ user, setUser ] = useState(props.currentUser)\n\n  useEffect(\n    () => {\n      setUser(props.currentUser)\n    },\n    [ props ]\n  )\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setUser({ ...user, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateUser(user.id, user)\n      }}\n    >\n      <label>Name</label>\n      <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n      <label>Start Date</label>\n\t\t\t<input type=\"date\" name=\"startdate\" value={user.startdate} onChange={handleInputChange} />\n\t\t\t<label>End Date</label>\n\t\t\t<input type=\"date\" name=\"enddate\" value={user.enddate} onChange={handleInputChange} />\n\t\t\t<label>Investment</label>\n\t\t\t<input type=\"number\" name=\"investment\" value={user.investment} onChange={handleInputChange} />\n\t\t\t<label>Profit</label>\n\t\t\t<input type=\"number\" name=\"profit\" value={user.profit} onChange={handleInputChange} />\n      <button>Update user</button>\n      <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditUserForm\n","import React from 'react'\n\nconst UserTable = props => (\n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Start Date</th>\n        <th>End Date</th>\n        <th>Investment</th>\n        <th>Profit</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.users.length > 0 ? (\n        props.users.map(user => (\n          <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.startdate}</td>\n            <td>{user.enddate}</td>\n            <td>{user.investment}</td>\n            <td>{user.profit}</td>\n            <td>\n              <button\n                onClick={() => {\n                  props.editRow(user)\n                }}\n                className=\"button muted-button\"\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => props.deleteUser(user.id)}\n                className=\"button muted-button\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td colSpan={3}>No users</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n)\n\nexport default UserTable\n","import React, { useState, Fragment } from 'react'\nimport AddUserForm from './forms/AddUserForm'\nimport EditUserForm from './forms/EditUserForm'\nimport UserTable from './tables/UserTable'\n\nconst App = () => {\n\t// Data\n\tconst usersData = [\n\t\t{ id: 1, name: 'Amir', startdate: '2020-01-01', \n\t\tenddate: '2020-02-01', investment: 50000, profit: 10000 },\n\t\t{ id: 2, name: 'Shoaib', startdate: '2020-01-01', \n\t\tenddate: '2020-02-01', investment: 50000, profit: 10000 },\n\t\t{ id: 3, name: 'Anas', startdate: '2020-01-01', \n\t\tenddate: '2020-02-01', investment: 50000, profit: 10000 },\n\t\t{ id: 4, name: 'Junaid', startdate: '2020-01-01', \n\t\tenddate: '2020-02-01', investment: 50000, profit: 10000 },\n\t]\n\n\tconst initialFormState = { id: null, name: ''\n\t, startdate: '',  enddate: '',  investment: 0,  profit: 0}\n\n\t// Setting state\n\tconst [ users, setUsers ] = useState(usersData)\n\tconst [ currentUser, setCurrentUser ] = useState(initialFormState)\n\tconst [ editing, setEditing ] = useState(false)\n\n\t// CRUD operations\n\tconst addUser = user => {\n\t\tuser.id = users.length + 1\n\t\tsetUsers([ ...users, user ])\n\t}\n\n\tconst deleteUser = id => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.filter(user => user.id !== id))\n\t}\n\n\tconst updateUser = (id, updatedUser) => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.map(user => (user.id === id ? updatedUser : user)))\n\t}\n\n\tconst editRow = user => {\n\t\tsetEditing(true)\n\n\t\tsetCurrentUser({ id: user.id, name: user.name, startdate: user.startdate, \n\t\t\tenddate: user.enddate, investment: user.investment, profit: user.profit })\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>iPhone Investment Tracker</h1>\n\t\t\t<div className=\"flex-row\">\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit user</h2>\n\t\t\t\t\t\t\t<EditUserForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Add user</h2>\n\t\t\t\t\t\t\t<AddUserForm addUser={addUser} />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t<h2>View users</h2>\n\t\t\t\t\t<UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}